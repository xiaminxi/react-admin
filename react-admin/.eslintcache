[{"G:\\react-admin\\src\\index.js":"1","G:\\react-admin\\src\\Layouts\\BaseLayout.js":"2","G:\\react-admin\\src\\router.js":"3","G:\\react-admin\\src\\routes\\AsyncComponent.js":"4","G:\\react-admin\\src\\Layouts\\Component\\SiderMenu.js":"5","G:\\react-admin\\src\\Layouts\\Component\\CommonHeader.js":"6","G:\\react-admin\\src\\routes\\routerConfig.js":"7","G:\\react-admin\\src\\utils\\utils.js":"8","G:\\react-admin\\src\\themes\\theme.js":"9","G:\\react-admin\\src\\pages\\Component\\CommonCard.js":"10","G:\\react-admin\\src\\pages\\Component\\CommonPage.js":"11","G:\\react-admin\\src\\pages\\HomePage\\index.js":"12","G:\\react-admin\\src\\pages\\Component\\CommonTable.js":"13","G:\\react-admin\\src\\pages\\MenuManage\\List.js":"14","G:\\react-admin\\src\\pages\\productManage\\productContcar\\index.js":"15","G:\\react-admin\\src\\pages\\productManage\\productTemplate\\index.js":"16","G:\\react-admin\\src\\pages\\Result\\404.js":"17","G:\\react-admin\\src\\pages\\SystemManage\\ContractConfig\\MenuManage\\List.js":"18","G:\\react-admin\\src\\pages\\SystemManage\\ContractConfig\\TemplateManage\\List.js":"19","G:\\react-admin\\src\\pages\\SystemManage\\ProjectConfig\\List.js":"20","G:\\react-admin\\src\\pages\\SystemManage\\ProjectConfig\\Contract\\List.js":"21","G:\\react-admin\\src\\pages\\SystemManage\\ProductConfig\\List.js":"22","G:\\react-admin\\src\\pages\\SystemManage\\ProjectConfig\\qwer\\qwerq\\qwerqwer\\List.js":"23","G:\\react-admin\\src\\utils\\vendor.js":"24","G:\\react-admin\\src\\server\\api.js":"25","G:\\react-admin\\src\\server\\request.js":"26","G:\\react-admin\\src\\server\\axios.js":"27","G:\\react-admin\\src\\server\\config.js":"28","G:\\react-admin\\src\\server\\utils.js":"29","G:\\react-admin\\src\\icon\\icons.js":"30","G:\\react-admin\\src\\Layouts\\Settings\\Settings.js":"31","G:\\react-admin\\src\\redux\\index.js":"32","G:\\react-admin\\src\\redux\\reducer.js":"33","G:\\react-admin\\src\\Layouts\\Settings\\component\\ThemesColor.js":"34","G:\\react-admin\\src\\redux\\createReducer.js":"35","G:\\react-admin\\src\\redux\\actionType.js":"36"},{"size":970,"mtime":1615450301752,"results":"37","hashOfConfig":"38"},{"size":5865,"mtime":1616488653379,"results":"39","hashOfConfig":"38"},{"size":526,"mtime":1615452883550,"results":"40","hashOfConfig":"38"},{"size":1078,"mtime":1616405470726,"results":"41","hashOfConfig":"38"},{"size":2378,"mtime":1616489318508,"results":"42","hashOfConfig":"38"},{"size":4239,"mtime":1615368210150,"results":"43","hashOfConfig":"38"},{"size":3231,"mtime":1616472616030,"results":"44","hashOfConfig":"38"},{"size":5344,"mtime":1609849422131,"results":"45","hashOfConfig":"38"},{"size":1941,"mtime":1615973282759,"results":"46","hashOfConfig":"38"},{"size":548,"mtime":1610029118275,"results":"47","hashOfConfig":"38"},{"size":1666,"mtime":1610029118275,"results":"48","hashOfConfig":"38"},{"size":382,"mtime":1610029118275,"results":"49","hashOfConfig":"38"},{"size":9269,"mtime":1610029118280,"results":"50","hashOfConfig":"38"},{"size":435,"mtime":1610029118275,"results":"51","hashOfConfig":"38"},{"size":384,"mtime":1610029118275,"results":"52","hashOfConfig":"38"},{"size":3730,"mtime":1616404641712,"results":"53","hashOfConfig":"38"},{"size":2275,"mtime":1616485074412,"results":"54","hashOfConfig":"38"},{"size":491,"mtime":1610029118275,"results":"55","hashOfConfig":"38"},{"size":378,"mtime":1610029118275,"results":"56","hashOfConfig":"38"},{"size":458,"mtime":1610029118275,"results":"57","hashOfConfig":"38"},{"size":378,"mtime":1610029118275,"results":"58","hashOfConfig":"38"},{"size":3555,"mtime":1616405430167,"results":"59","hashOfConfig":"38"},{"size":375,"mtime":1610029118275,"results":"60","hashOfConfig":"38"},{"size":508,"mtime":1610029118280,"results":"61","hashOfConfig":"38"},{"size":385,"mtime":1616056057324,"results":"62","hashOfConfig":"38"},{"size":1854,"mtime":1616059254933,"results":"63","hashOfConfig":"38"},{"size":1311,"mtime":1610029118275,"results":"64","hashOfConfig":"38"},{"size":604,"mtime":1616057727819,"results":"65","hashOfConfig":"38"},{"size":2728,"mtime":1610029118280,"results":"66","hashOfConfig":"38"},{"size":1440,"mtime":1615291620555,"results":"67","hashOfConfig":"38"},{"size":1171,"mtime":1616406269774,"results":"68","hashOfConfig":"38"},{"size":302,"mtime":1615360954422,"results":"69","hashOfConfig":"38"},{"size":1226,"mtime":1616471245962,"results":"70","hashOfConfig":"38"},{"size":2371,"mtime":1616406207792,"results":"71","hashOfConfig":"38"},{"size":475,"mtime":1616471210764,"results":"72","hashOfConfig":"38"},{"size":299,"mtime":1616471161801,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"1nvf2yw",{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"77"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"77"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"77"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"77"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"77"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"77"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"G:\\react-admin\\src\\index.js",["161"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2020-05-22 17:38:31\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2021-03-11 16:11:41\r\n * @Description: 请输入文件说明\r\n * @FilePath: \\xiaminxi.github.io\\src\\index.js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from \"react-dom\"\r\nimport BaseLayout from './Layouts/BaseLayout'\r\nimport { ConfigProvider } from 'antd';\r\nimport './index.less';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport RouterConfig from './router';\r\nimport { Provider  } from 'react-redux'\r\nimport store from './redux';\r\n\r\nconst functionObject = {\r\n    api: () => {\r\n        console.log(\"全局api方法\")\r\n    }\r\n}\r\nReact.Component.prototype = {\r\n    ...functionObject,\r\n    ...React.Component.prototype\r\n}\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConfigProvider locale={zhCN}>\r\n            {/* <BaseLayout /> */}\r\n            <RouterConfig />\r\n        </ConfigProvider>\r\n    </Provider>\r\n    ,\r\n    document.getElementById(\"root\")\r\n)",["162","163"],"G:\\react-admin\\src\\Layouts\\BaseLayout.js",["164"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2020-08-05 20:53:27\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2021-03-23 16:37:33\r\n * @Description: 页面布局文件\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Layout, Tabs, Dropdown, Menu, Spin, } from 'antd';\r\nimport SiderMenu from './Component/SiderMenu';\r\nimport CommonHeader from './Component/CommonHeader';\r\nimport { Route } from 'react-router-dom'\r\nimport Settings from './Settings/Settings';\r\nimport store from '../redux/index'\r\nimport { changeActiveKey, removeTabpane } from '../redux/createReducer';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst { Footer, Content } = Layout\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class BaseLayout extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = store.getState()\r\n        store.subscribe(this.changeStore)\r\n    }\r\n\r\n    changeStore = () => {\r\n        this.setState(store.getState())\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { props } = this\r\n        this.setState({ activeKey: props.location.pathname })\r\n    }\r\n\r\n    componentWillReceiveProps(props, state) {\r\n        console.log(props, state)\r\n        this.setState({ activeKey: props.location.pathname })\r\n    }\r\n\r\n    // 插入标签页\r\n    insertTabPane = (item) => {\r\n        let { tabpaneList = [] } = this.state\r\n        const reuslt = tabpaneList.filter(findItem => findItem.key === item.path)\r\n        if (reuslt.length) {\r\n            store.dispatch(changeActiveKey({ activeKey: item.path }))\r\n        } else {\r\n            tabpaneList.push({\r\n                key: item.path,\r\n                title: item.name,\r\n                component: item.component\r\n            })\r\n            this.setState({ tabpaneList, activeKey: item.path })\r\n        }\r\n        localStorage.setItem(\"tabpaneList\", JSON.stringify(tabpaneList))\r\n    }\r\n\r\n    // 切换标签页\r\n    onTabClick = (activeKey) => store.dispatch(changeActiveKey({ activeKey }))\r\n\r\n    // 点击关闭标签页\r\n    deleteTabPane = (targetKey, action) => this[action](\"closeCurrent\", targetKey);\r\n\r\n    // 关闭标签页\r\n    remove = (operationType, targetKey) => {\r\n        console.log(targetKey)\r\n        let { tabpaneList = [], activeKey } = this.state\r\n        let findIndex = tabpaneList.findIndex(item => item.key === targetKey)\r\n\r\n        tabpaneList = operationType === \"closeCurrent\" ?\r\n            tabpaneList.filter(item => item.key !== targetKey) : operationType === \"closeOther\" ?\r\n                tabpaneList.filter(item => item.key === targetKey) : []\r\n\r\n        activeKey = operationType === \"closeCurrent\" ?\r\n            tabpaneList[findIndex - 1].key : operationType === \"closeOther\" ?\r\n                activeKey : operationType === \"closeAll\" ? \"/\" : activeKey\r\n        store.dispatch(removeTabpane({ tabpaneList, activeKey }))\r\n        this.props.history.replace(activeKey)\r\n    }\r\n\r\n    // 刷新当前页\r\n    refreshCurrent = (targetKey) => {\r\n        this.setState({ isReload: false }, () => {\r\n            setTimeout(() => {\r\n                this.setState({ isReload: true })\r\n            }, 500);\r\n        })\r\n    }\r\n\r\n    // 右键菜单事件\r\n    tabRightClick = (key, targetKey) => {\r\n        if (key === \"refreshCurrent\") {\r\n            this[key](targetKey)\r\n        } else {\r\n            this.remove(key, targetKey)\r\n        }\r\n    }\r\n\r\n    renderTabBar = (item) => {\r\n        const { activeKey } = this.state\r\n        return (\r\n            <Dropdown overlay={(\r\n                <Menu onClick={({ key }) => this.tabRightClick(key, item.key)} >\r\n                    <Menu.Item key=\"refreshCurrent\" disabled={item.key !== activeKey} >刷新当前标签页</Menu.Item>\r\n                    <Menu.Divider />\r\n                    <Menu.Item key=\"closeCurrent\" disabled={item.key !== activeKey} >关闭当前标签页</Menu.Item>\r\n                    <Menu.Divider />\r\n                    <Menu.Item key=\"closeOther\" >关闭其他标签页</Menu.Item>\r\n                    <Menu.Divider />\r\n                    <Menu.Item key=\"closeAll\" >关闭全部标签页</Menu.Item>\r\n                </Menu>\r\n            )} trigger={['contextMenu']}>\r\n                <div onClick={() => this.onTabClick(item.key)}>{item.title}</div>\r\n            </Dropdown>\r\n        )\r\n    };\r\n\r\n\r\n    render() {\r\n        const { activeKey = \"\", tabpaneList = [], visible = false, isReload = true } = this.state\r\n\r\n        return (\r\n            <Layout style={{ width: \"100%\" }} >\r\n                <SiderMenu onMenuItemClick={this.insertTabPane} activeKey={activeKey} />\r\n                <Layout>\r\n                    <CommonHeader activeKey={activeKey} changeOpen={this.changeOpen} />\r\n                    <Content className=\"scroll-container\">\r\n                        <Tabs activeKey={activeKey} type=\"editable-card\" hideAdd={true} onEdit={this.deleteTabPane}  >\r\n                            {\r\n                                tabpaneList.map(item => (\r\n                                    <TabPane closable={item.key !== \"/\"} tab={this.renderTabBar(item)} key={item.key} >\r\n                                        <Spin indicator={<LoadingOutlined style={{ fontSize: 26 }} spin />} spinning={!isReload} tip=\"页面加载中...\">\r\n                                            {isReload ? <Route render={props => <item.component {...props} />} /> : <div style={{ height: 300 }} ></div>}\r\n                                        </Spin>\r\n                                    </TabPane>\r\n                                ))\r\n                            }\r\n                        </Tabs>\r\n                    </Content>\r\n                    <Settings />\r\n                    <Footer style={{ textAlign: 'center', background: '#fff' }}>Ant Design ©{new Date().getFullYear()} Created by Ant UED</Footer>\r\n                </Layout>\r\n            </Layout>\r\n\r\n        )\r\n    }\r\n}","G:\\react-admin\\src\\router.js",[],"G:\\react-admin\\src\\routes\\AsyncComponent.js",[],"G:\\react-admin\\src\\Layouts\\Component\\SiderMenu.js",["165"],"G:\\react-admin\\src\\Layouts\\Component\\CommonHeader.js",["166","167","168","169","170","171","172"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2019-09-06 03:40:21\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2021-03-10 17:23:30\r\n * @Description: 请输入文件描述\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Layout, Menu, Form, Row, Col, Button, Card, Breadcrumb, Input, Avatar, Dropdown } from 'antd';\r\nimport { routerData } from '../../routes/routerConfig';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport CommonCard from '../../pages/Component/CommonCard';\r\n\r\n\r\nconst { Header } = Layout;\r\n\r\nexport default class GlobalHeader extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: 查找当前路由的所有父节点\r\n     * @param {*} routerData 路由数据\r\n     * @param {*} condition 查询条件\r\n     * @param {*} result 返回结果\r\n     * @return {Array}\r\n     */\r\n    getParent(routerData, condition, result = []) {\r\n        if (!routerData) return []\r\n        for (const data of routerData) {\r\n            result.push(data)\r\n            if (condition(data)) return result\r\n            if (data.children) {\r\n                const findChildren = this.getParent(data.children, condition, result)\r\n                if (findChildren.length) return findChildren\r\n            }\r\n            result.pop()\r\n        }\r\n        return []\r\n    }\r\n\r\n    // 渲染面包屑\r\n    renderBreadcrumb = (data) => data.map(item => {\r\n        if (item.children) {\r\n            return <Breadcrumb.Item key={item.path}  >{item.name}</Breadcrumb.Item>\r\n        } else {\r\n            return <Breadcrumb.Item key={item.path} href={item.path} ><span style={{ color: localStorage.getItem(\"theme\") || \"#1890ff\" }} >{item.name}</span></Breadcrumb.Item>\r\n        }\r\n    })\r\n\r\n    ondropdownMenuClick = ({key}) => {\r\n       if(key === \"openSetting\"){\r\n           this.props.changeOpen()\r\n       }\r\n    }\r\n\r\n    render() {\r\n        const { activeKey = null } = this.props\r\n        const menu = (\r\n            <Menu onClick={this.ondropdownMenuClick}>\r\n\r\n                <Menu.Item>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\r\n                        1st menu item\r\n                </a>\r\n                </Menu.Item>\r\n                <Menu.Divider />\r\n                <Menu.Item>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">\r\n                        2nd menu item\r\n                </a>\r\n                </Menu.Item>\r\n                <Menu.Divider />\r\n                <Menu.Item key=\"openSetting\"> 打开设置  </Menu.Item>\r\n            </Menu>\r\n        );\r\n\r\n        return (\r\n            <Header style={{ background: '#fff', padding: \"0px 10px\", height: 50 }}>\r\n                <CommonCard bodyStyle={{ padding: 0 }} style={{ height: \"100%\", lineHeight: \"50px\" }}>\r\n                    <Row>\r\n                        <Col span={12} >\r\n                            <Breadcrumb style={{ padding: 14 }} >\r\n                                {this.renderBreadcrumb([{ name: \"首页\", path: \"/\" }, ...this.getParent(routerData, data => data.path === activeKey)])}\r\n                            </Breadcrumb>\r\n                        </Col>\r\n                        <Col span={4} >\r\n                            <Input.Search style={{ marginTop: 9 }} />\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <div style={{ textAlign: \"center\" }}><a>欢迎使用华兴金融服务系统</a></div>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <div >\r\n                                <div style={{ float: \"right\", paddingRight: 20 }} >\r\n                                    <Dropdown overlay={menu} arrow={true} >\r\n                                        <Avatar style={{cursor: \"pointer\"}} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                    </Dropdown>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CommonCard>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\n","G:\\react-admin\\src\\routes\\routerConfig.js",[],"G:\\react-admin\\src\\utils\\utils.js",[],["173","174"],"G:\\react-admin\\src\\themes\\theme.js",[],"G:\\react-admin\\src\\pages\\Component\\CommonCard.js",["175"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2020-08-07 17:27:56\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2020-11-11 22:49:35\r\n * @Description: 请输入文件说明\r\n */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card } from 'antd'\r\n\r\nfunction CommonCard(props) {\r\n    return (\r\n        <Card bodyStyle={{ padding: 5, ...props.bodyStyle }} style={props.style || { padding: 10, marginBottom: 10 }} >\r\n            {props.children}\r\n        </Card>\r\n    )\r\n}\r\n\r\nCommonCard.propTypes = {\r\n\r\n}\r\n\r\nexport default CommonCard\r\n\r\n","G:\\react-admin\\src\\pages\\Component\\CommonPage.js",[],"G:\\react-admin\\src\\pages\\HomePage\\index.js",[],"G:\\react-admin\\src\\pages\\Component\\CommonTable.js",["176"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2020-08-07 16:51:23\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2021-01-06 22:43:16\r\n * @Description: 请输入文件说明\r\n */\r\nimport { Table, Button } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport React, * as react from 'react'\r\nimport { orderByIndex } from '../../utils/vendor'\r\n\r\nexport default class CommonTable extends react.Component {\r\n    static propTypes = {\r\n\r\n        rowKey: PropTypes.func,\r\n        bordered: PropTypes.bool,\r\n        buttonList: PropTypes.array,\r\n        columns: PropTypes.array.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            pageParams: {\r\n                pageNum: 1,\r\n                pageSize: 10\r\n            },\r\n            storeParams: {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { pageParams } = this.state\r\n        this.getTableData({ params: pageParams })\r\n    }\r\n\r\n\r\n    /**\r\n     * @description: 获取远程表格数据\r\n     * @param {object} params 获取数据的参数\r\n     * @return {promise} \r\n     */\r\n    getTableData = ({ params = {}, formParams = {}, changePage = false, formSearch = false }) => {\r\n        const { api , tableParams={}} = this.props; if (!api) return false;\r\n        const { storeParams = {}, pageParams = {} } = this.state\r\n        let searchParams = {}\r\n        // 如果有表单参数\r\n        if (Object.values(formParams).length) {\r\n            searchParams = Object.assign({}, { ...storeParams, ...formParams, ...params })\r\n        } else {\r\n            searchParams = Object.assign({}, { ...storeParams, ...params })\r\n        }\r\n        searchParams = {...searchParams, ...tableParams}\r\n        this.setState({ loading: true, storeParams: searchParams })\r\n\r\n        api(searchParams)\r\n            .then(res => {\r\n                const { rows = [] } = this.state\r\n                const { openStore = false } = this.props\r\n                this.setState({\r\n                    loading: false,\r\n                    total: res.total,\r\n                    dataSource: res.data || [],\r\n                    rows: openStore ? rows : [],\r\n                    keys: openStore ? this.getKeys(rows, res.data || [], \"重载\") : [],\r\n                })\r\n            })\r\n            .catch(res => {\r\n                console.log(res)\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n\r\n    /**\r\n     * @description: 处理表格已选择的key\r\n     * @param {array} rowstemp 已选择的行\r\n     * @param {array} dataSource 远程加载的数据\r\n     * @return {array} 已选择的key\r\n     */\r\n    getKeys = (rowstemp, dataSource, operationType) => {\r\n        const selected = []\r\n        const rowstem = rowstemp\r\n        dataSource.forEach((item, itemIndex) => {\r\n            rowstem.forEach((list, listIndex) => {\r\n                if (JSON.stringify(item) === JSON.stringify(list))\r\n                    selected.push(itemIndex)\r\n            });\r\n        });\r\n        console.log(\"操作类型：\", operationType)\r\n        console.log(\"加载的数据：\", dataSource)\r\n        console.log(\"已选择的key：\", selected)\r\n        console.log(\"已选择的数据：\", rowstem)\r\n        return selected\r\n    }\r\n\r\n\r\n    render() {\r\n        const { keys = [], rows = [] } = this.state\r\n        const { columns = [], buttonList = [], openSortNumber = false, singleMode = false } = this.props\r\n        const { total = 0, loading = false, pageParams = {}, dataSource = [] } = this.state\r\n        const { pageNum, pageSize } = pageParams\r\n\r\n        const tableprops = {\r\n            size: \"middle\",\r\n            bordered: true,\r\n            loading: loading,\r\n            dataSource: dataSource,\r\n            className: \"common-table\",\r\n            scroll: dataSource.length > 10 ? { y: 490,x: columns.length*120 } : {x: columns.length*120},\r\n            columns: openSortNumber ? [\r\n                { title: \"序号\", dataIndex: \"sortNumber\", key: \"sortNumber\", render: (text, record, index) => orderByIndex(pageNum, pageSize, index) },\r\n                ...columns\r\n            ] : columns,\r\n\r\n            onRow: (record, index) => {\r\n                return {\r\n                    onClick: () => {\r\n                        // 当表格开启多选模式后，点击表格行将不再选中该数据\r\n                        if(!singleMode) return false\r\n                        this.setState({ rows: [record], keys: this.getKeys([record], dataSource, \"点击表格行\") })\r\n                    },\r\n                    onDoubleClick: () => {\r\n\r\n                    },\r\n                }\r\n            },\r\n            pagination: {\r\n                style: { marign: \"10px 0px\" },\r\n                total: total,\r\n                size: \"default\",\r\n                current: pageNum,\r\n                pageSize: pageSize,\r\n                showSizeChanger: true,\r\n                showQuickJumper: true,\r\n                pageSizeOptions: [10, 20, 30, 40],\r\n                onChange: (page, pageSize) => {\r\n                    this.setState({\r\n                        pageParams: {\r\n                            ...pageParams,\r\n                            pageNum: page,\r\n                            pageSize: pageSize\r\n                        },\r\n                        selectedRows: [],\r\n                        selectedRowKeys: []\r\n                    }, this.getTableData({ params: { pageNum: page, pageSize }, changePage: true }))\r\n                },\r\n                onShowSizeChange: (page, pageSize) => {\r\n                    this.setState({\r\n                        pageParams: {\r\n                            ...pageParams,\r\n                            pageNum: 1,\r\n                            pageSize: pageSize\r\n                        },\r\n                        selectedRows: [],\r\n                        selectedRowKeys: []\r\n                    }, this.getTableData({ params: { pageNum: 1, pageSize }, changePage: true }))\r\n                },\r\n                showTotal: (total, range) => {\r\n                    return `总计${total}条数据，当前第${pageNum}页， 第${range[0]}条 ~ 第${range[1]}条`;\r\n                },\r\n            },\r\n            rowSelection: {\r\n                type: \"checkbox\",\r\n                selectedRows: rows,\r\n                selectedRowKeys: keys,\r\n                hideSelectAll: singleMode,\r\n                onChange: (selectedRowKeys, selectedRows) => {\r\n\r\n\r\n                },\r\n                onSelect: (record, selected, selectedRows, nativeEvent) => {\r\n                    if (singleMode) {\r\n                        if (selected) {\r\n                            this.setState({ rows: [record], keys: this.getKeys([record], dataSource, \"单选\") })\r\n                        } else {\r\n                            this.setState({ rows: [], keys: [] })\r\n                        }\r\n                    } else {\r\n                        if (selected) {\r\n                            const rowstemp = [...rows, record]\r\n                            this.setState({ rows: rowstemp, keys: this.getKeys(rowstemp, dataSource, \"单选\") })\r\n                        } else {\r\n                            const rowstemp = rows.filter(item => JSON.stringify(item) !== JSON.stringify(record))\r\n                            this.setState({ rows: rowstemp, keys: this.getKeys(rowstemp, dataSource, \"取消单选\") })\r\n                        }\r\n                    }\r\n                },\r\n                onSelectAll: (selected, selectedRows, changeRows) => {\r\n                    const { rows = [] } = this.state\r\n                    if (selected) {\r\n                        const rowstemp = [...rows, ...selectedRows]\r\n                        console.log(rowstemp)\r\n                        this.setState({ rows: rowstemp, keys: this.getKeys(rowstemp, dataSource, \"全选\") })\r\n                    } else {\r\n                        const rowstemp = rows.filter(item => !changeRows.find(list => JSON.stringify(list) === JSON.stringify(item)))\r\n                        this.setState({ rows: rowstemp, keys: this.getKeys(rowstemp, dataSource, \"取消全选\") })\r\n                    }\r\n                }\r\n            },\r\n\r\n            rowKey: (record, index) => index,\r\n            title: buttonList.length ? (crrentPageData) => {\r\n                return (\r\n                    <react.Fragment>\r\n                        {\r\n                            buttonList.map((item, index) => {\r\n                                return item.auth === \"xiaminxi\" && \r\n                                <Button key={item.toString() + index} type={item.type || \"primary\"} disabled={item.disabled(rows)} onClick={() => item.onClick(rows, keys)} >{item.title}</Button>\r\n                            })\r\n                        }\r\n                    </react.Fragment>\r\n                )\r\n            } : null,\r\n            rowClassName: (record, index) => {\r\n                // return \"\"\r\n                // return keys.includes(index) ? 'selceted-tr' : index % 2 === 0 ? \"odd-tr\" : \"even-tr\"\r\n                return keys.includes(index) ? 'selceted-tr' : \"\"\r\n            }\r\n        }\r\n        return (\r\n            <react.Fragment>\r\n                <Table {...tableprops} />\r\n            </react.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n","G:\\react-admin\\src\\pages\\MenuManage\\List.js",[],"G:\\react-admin\\src\\pages\\productManage\\productContcar\\index.js",[],"G:\\react-admin\\src\\pages\\productManage\\productTemplate\\index.js",["177"],"import { Upload, Modal } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\nimport Icons from '../../../icon/icons';\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nexport default class PicturesWall extends React.Component {\r\n    state = {\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        previewTitle: '',\r\n        fileList: [\r\n            {\r\n                uid: '-1',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n            },\r\n            {\r\n                uid: '-2',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n            },\r\n            {\r\n                uid: '-3',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n            },\r\n            {\r\n                uid: '-4',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n            },\r\n            {\r\n                uid: '-xxx',\r\n                percent: 50,\r\n                name: 'image.png',\r\n                status: 'uploading',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n            },\r\n            {\r\n                uid: '-5',\r\n                name: 'image.png',\r\n                status: 'error',\r\n            },\r\n        ],\r\n    };\r\n\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n        });\r\n    };\r\n\r\n    handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n    render() {\r\n        const { previewVisible, previewImage, fileList, previewTitle } = this.state;\r\n        const uploadButton = (\r\n            <div>\r\n                <PlusOutlined />\r\n                <div style={{ marginTop: 8 }}>Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <>\r\n                <Upload\r\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                    listType=\"picture-card\"\r\n                    fileList={fileList}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                    showUploadList={\r\n                        {\r\n                            showRemoveIcon: true,\r\n                        }\r\n                    }\r\n                >\r\n                    {fileList.length >= 8 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal\r\n                    visible={previewVisible}\r\n                    title={previewTitle}\r\n                    footer={null}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}","G:\\react-admin\\src\\pages\\Result\\404.js",["178","179","180"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2020-11-11 22:42:03\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2021-03-23 15:37:54\r\n * @Description: 请输入文件说明\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Tabs, Dropdown, Menu, Button } from 'antd'\r\nconst { TabPane } = Tabs\r\n\r\nexport default class Nopage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n        console.log(this.api())\r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log(1231546564456, \"shu\")\r\n    }\r\n    \r\n\r\n\r\n    onChange = (activeKey) => {\r\n        console.log(activeKey,111111111111)\r\n        this.setState({ activeKey })\r\n    }\r\n     renderTabBar = (item) => {\r\n        console.log(item)\r\n        return (\r\n\r\n             \r\n                    <Dropdown overlay={(\r\n                    <Menu onClick={this.onChange}>\r\n                        <Menu.Item key=\"closeCurrent\" >\r\n                            <div>关闭当前标签页</div>\r\n                        </Menu.Item>\r\n                        <Menu.Divider />\r\n                        <Menu.Item key=\"closeOther\" >\r\n                            <div>关闭其他标签页</div>\r\n                        </Menu.Item>\r\n                        <Menu.Divider />\r\n                        <Menu.Item key=\"closeAll\">\r\n                            <div >关闭全部标签页</div>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                )} trigger={['contextMenu']}>\r\n                   <div > {item.title}</div>\r\n                </Dropdown>\r\n        )\r\n    };\r\n    render() {\r\n        const { activeKey = \"qwerq\" } = this.state\r\n\r\n       \r\n\r\n        const arr = [\r\n            { title: \"测试文字\", content: \"测试文字\", key: \"qwerq\" },\r\n            { title: \"就是一个标题\", content: \"就是一个标题\", key: \"qqwewerq\" },\r\n            { title: \"你看到的不一定是真的\", content: \"你看到的不一定是真的\", key: \"qwewqertqrq\" },\r\n            { title: \"眼见也不一定为实\", content: \"眼见也不一定为实\", key: \"qwrdgfasdferq\" },\r\n        ]\r\n\r\n\r\n        return (\r\n           \r\n           <div>\r\n               <Button type=\"primary\" >qwer</Button>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n","G:\\react-admin\\src\\pages\\SystemManage\\ContractConfig\\MenuManage\\List.js",[],"G:\\react-admin\\src\\pages\\SystemManage\\ContractConfig\\TemplateManage\\List.js",[],"G:\\react-admin\\src\\pages\\SystemManage\\ProjectConfig\\List.js",[],"G:\\react-admin\\src\\pages\\SystemManage\\ProjectConfig\\Contract\\List.js",[],"G:\\react-admin\\src\\pages\\SystemManage\\ProductConfig\\List.js",["181"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2020-08-05 21:40:42\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2021-03-22 17:30:30\r\n * @Description: 请输入文件说明\r\n * @FilePath: \\xiaminxi.github.io\\src\\pages\\SystemManage\\ProductConfig\\List.js\r\n */\r\nimport React, { Component, Fragment } from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport { getMenuList } from '../../../server/api'\r\nimport CommonPage from '../../Component/CommonPage'\r\n\r\nexport default class List extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const debounce = (cb, times = 300) => {\r\n            let timer =null\r\n            return (curr) => {\r\n                clearTimeout(timer)\r\n                timer = setTimeout(cb, times, curr.target.value);\r\n            }\r\n        }\r\n\r\n        const setVal = (e) => {\r\n            console.log(e)\r\n        }\r\n        const pageProps = {\r\n            pageInit: {\r\n                // tableParams: {\r\n                //     menuName: \"订单\"\r\n                // },\r\n                // 单选模式\r\n                singleMode: true,\r\n                // 加载方法\r\n                api: getMenuList,\r\n                // 是否开启储存模式\r\n                openStore: true,\r\n                // 是否在表格最前面加上排序序号\r\n                openSortNumber: true,\r\n                // 操作按钮\r\n                buttonList: [\r\n                    { title: \"删除\", auth: \"xiaminxi\", disabled: (rows) => rows.length !== 1, onClick: (rows, keys) => this.buclick(rows, keys) },\r\n                    {\r\n                        title: \"增加\", auth: \"xiaminxi\", type: \"primary\", disabled: (rows) => {\r\n                            return !(rows.length >= 1)\r\n                        }, onClick: (rows, keys) => this.buclick(rows, keys)\r\n                    },\r\n                ]\r\n            },\r\n            tableProps: {\r\n                columns: [\r\n                    { title: '所属系统', dataIndex: 'sysName', key: 'sysName', },\r\n                    { title: '上级菜单', dataIndex: 'parentName', key: 'parentName', },\r\n                    { title: '菜单名称', dataIndex: 'menuName', key: 'menuName', },\r\n                    { title: '菜单地址', dataIndex: 'menuUrl', key: 'menuUrl', },\r\n                    { title: \"授权标识\", dataIndex: \"menuCode\", key: \"menuCode\", },\r\n                    { title: \"菜单图标\", dataIndex: \"menuIcon\", key: \"menuIcon\", },\r\n                    { title: '是否叶节点', dataIndex: 'menuIsLeaf', key: 'menuIsLeaf' },\r\n                    { title: '菜单类型', dataIndex: 'menuType', key: 'menuType' },\r\n                    { title: '菜单状态', dataIndex: 'menuStatus', key: 'menuStatus' },\r\n                    { title: '备注', dataIndex: 'menuRemark', key: 'menuRemark', },\r\n                ],\r\n            },\r\n            FormItemList: [\r\n                <Form.Item label=\"菜单名称\" name=\"menuName\" key=\"menuName\"  >\r\n                    <Input onChange={debounce(setVal, 3000)} />\r\n                </Form.Item>,\r\n                <Form.Item label=\"上级菜单\" name=\"parentName\" key=\"parentName\"  >\r\n                    <Input />\r\n                </Form.Item>,\r\n                <Form.Item label=\"菜单状态\" name=\"menuStatus\" key=\"menuStatus\" >\r\n                    <Input />\r\n                </Form.Item>\r\n            ]\r\n        }\r\n\r\n        return (\r\n            <CommonPage {...pageProps} />\r\n        )\r\n    }\r\n}\r\n","G:\\react-admin\\src\\pages\\SystemManage\\ProjectConfig\\qwer\\qwerq\\qwerqwer\\List.js",[],"G:\\react-admin\\src\\utils\\vendor.js",[],"G:\\react-admin\\src\\server\\api.js",[],"G:\\react-admin\\src\\server\\request.js",[],"G:\\react-admin\\src\\server\\axios.js",["182","183"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2020-08-27 15:15:55\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2021-01-05 21:17:50\r\n * @Description: 请求服务配置文件\r\n */\r\nimport Axios from 'axios';\r\nimport { cookie, checkStatus } from './utils';\r\nimport { HTTP_BASE_URL } from './config';\r\nconsole.log(process.env)\r\n// 创建请求实例\r\nconst axios = Axios.create({\r\n    timeout: 60000,\r\n    baseURL: HTTP_BASE_URL,\r\n    validateStatus: status => {\r\n        return status === 200 || status > 200;\r\n    },\r\n});\r\n\r\n// 添加请求拦截\r\naxios.interceptors.request.use(\r\n    config => {\r\n        console.log(cookie.get('token'))\r\n        const token = cookie.get(\"token\")\r\n        var a = token ? cookie.set('token', token, 2 / 24) : null\r\n        const userInfo = cookie.get(\"userInfo\")\r\n        var b = userInfo ? cookie.set('userInfo', userInfo, 2 / 24) : null\r\n        config.headers = {\r\n            sysCode: \"MXL_MANAGE\",\r\n            'Content-Type': 'application/json',\r\n            accessToken: cookie.get('token'),\r\n        };\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n    response => checkStatus(response),\r\n    error => {\r\n        return Promise.reject({ message: error })\r\n    }\r\n);\r\n\r\nexport default axios","G:\\react-admin\\src\\server\\config.js",[],"G:\\react-admin\\src\\server\\utils.js",[],"G:\\react-admin\\src\\icon\\icons.js",["184","185"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2021-03-09 16:27:43\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2021-03-09 20:07:00\r\n * @Description: 请输入文件说明\r\n */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Icon, { createFromIconfontCN, HomeOutlined } from '@ant-design/icons';\r\n\r\nconst IconFont = createFromIconfontCN({\r\n    scriptUrl: [\r\n        \"//at.alicdn.com/t/font_664079_ng1t17evpb9.js\",\r\n        \"//at.alicdn.com/t/font_664079_prgu8mawapc.js\",\r\n    ],\r\n});\r\n\r\nfunction Icons(props) {\r\n    const svgComponent = (\r\n        <svg className=\"icon\" aria-hidden=\"true\" style={{ width: props.width, height: props.height }} >\r\n            <use href={props.type.includes(\"icon\") ? `#${props.type}` : `#icon-${props.type}`}></use>\r\n        </svg>\r\n    )\r\n    return <Icon component={() => svgComponent} />\r\n}\r\n\r\nIcons.defaultProps = {\r\n    width: 20,\r\n    height: 20,\r\n}\r\n\r\nIcons.propTypes = {\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    type: PropTypes.string.isRequired,\r\n}\r\n\r\n// function Icons(props) {\r\n//     return <IconFont type={props.type.includes(\"icon\") ? props.type : `icon-${props.type}`} style={props.style} />\r\n// }\r\n\r\n// Icons.defaultProps = {\r\n//     style: {\r\n//         fontSize: \"2em\",\r\n//     }\r\n// }\r\n\r\n// Icons.propTypes = {\r\n//     style: PropTypes.object,\r\n//     fontSize: PropTypes.string,\r\n//     type: PropTypes.string.isRequired,\r\n// }\r\n\r\nexport default Icons","G:\\react-admin\\src\\Layouts\\Settings\\Settings.js",["186","187","188","189"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2021-03-09 18:04:08\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2021-03-22 17:44:23\r\n * @Description: 请输入文件说明\r\n */\r\nimport React, { Fragment, useCallback, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Descriptions, Drawer } from 'antd'\r\nimport Icons from '../../icon/icons'\r\nimport ThemesColor from './component/ThemesColor'\r\n\r\n\r\n\r\n\r\n\r\nfunction Settings(props) {\r\n    const [visible, setVisible] = useState(true)\r\n\r\n    useEffect(() => setVisible(!visible), [])\r\n\r\n    return (\r\n        <Drawer maskClosable={true} width={300} visible={visible} closable={false} onClose={() => setVisible(!visible)}  >\r\n            <Descriptions title=\"主题设置\" >\r\n                <Descriptions.Item>\r\n                    <ThemesColor/>\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n            <Button style={{ position: \"fixed\", right: 300, top: window.innerHeight / 2 }} icon={<Icons type={visible ? \"guanbi\" : \"icon-shezhi1\"} />} onClick={() => setVisible(!visible)} />\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nSettings.propTypes = {\r\n\r\n}\r\n\r\nexport default Settings\r\n\r\n\r\n","G:\\react-admin\\src\\redux\\index.js",[],"G:\\react-admin\\src\\redux\\reducer.js",["190"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2021-02-22 19:50:17\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2021-03-23 11:47:25\r\n * @Description: 请输入文件说明\r\n */\r\nimport { CHANGE_ACTIVEKEY, REMOVE_TABPANE } from \"./actionType\"\r\nimport getComponent from \"../routes/AsyncComponent\"\r\n\r\nconst getLocalRoute = () => {\r\n    try {\r\n        let tabpaneList = JSON.parse(localStorage.getItem(\"tabpaneList\"))\r\n        tabpaneList.map(item => item.component = item.key === \"/\" ? getComponent(item.title, \"/HomePage/index\") : getComponent(item.title, item.key))\r\n        return tabpaneList\r\n    } catch (err) {\r\n        return [\r\n            {\r\n                key: \"/\",\r\n                title: \"首页\",\r\n                closable: false,\r\n                componet: getComponent(\"首页\", \"/HomePage/index\"),\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nconst defaultState = {\r\n    visible: false,\r\n    tabpaneList: getLocalRoute()\r\n\r\n}\r\nexport default (state = defaultState, action) => {\r\n    const { newState = {} } = action\r\n\r\n    if (action.type === CHANGE_ACTIVEKEY) {\r\n        return { ...state, ...newState }\r\n    }\r\n    if (action.type === REMOVE_TABPANE) {\r\n\r\n        return { ...state, ...newState }\r\n    }\r\n\r\n    return state\r\n}","G:\\react-admin\\src\\Layouts\\Settings\\component\\ThemesColor.js",["191"],"/*\r\n * @Author: xiaminxi\r\n * @Date: 2020-05-22 17:38:31\r\n * @LastEditors: xiaminxi\r\n * @LastEditTime: 2021-03-22 17:43:27\r\n * @Description: 请输入文件说明\r\n * @FilePath: \\xiaminxi.github.io\\src\\index.js\r\n */\r\nimport React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Tooltip, message } from 'antd'\r\nimport { colorList } from \"../../../themes/theme\"\r\n\r\n\r\nfunction ThemesColor(props) {\r\n    const changeTheme = (color) => {\r\n        localStorage.setItem(\"theme\", color);\r\n        window.less\r\n            .modifyVars({\r\n                // 全局主色\r\n                \"@primary-color\": color,\r\n                // 链接色\r\n                \"@link-color\": color,\r\n                // 成功色\r\n                // \"@success-color\": color,\r\n                // 警告色\r\n                // \"@warning-color\": color,\r\n                // 错误色\r\n                // \"@error-color\": color,\r\n                // 主字号\r\n                // \"@font-size-base\": color,\r\n                // 标题色\r\n                \"@heading-color\": color,\r\n                // 主文本色\r\n                \"@text-color\": color,\r\n                // 次文本色\r\n                // \"@text-color-secondary\": color,\r\n                // 失效色\r\n                // \"@disabled-color\": color,\r\n                // 组件/浮层圆角\r\n                // \"@border-radius-base\": color,\r\n                // 边框色\r\n                \"@border-color-base\": color,\r\n                // 浮层阴影\r\n                // \"@box-shadow-base\": color,\r\n                \"@primary-bg\": color\r\n            })\r\n            .then(less => {\r\n                message.success(\"更换主题颜色成功\")\r\n            })\r\n            .catch(error => {\r\n                console.error(`Failed to update theme：`, error);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        changeTheme(localStorage.getItem(\"theme\"))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                colorList.map(item => (\r\n                    <Tooltip title={item.title} key={item.key}>\r\n                        <div style={{ backgroundColor: item.key }} className=\"theme-box-warp\" onClick={() => changeTheme(item.key)} ></div>\r\n                    </Tooltip>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nThemesColor.propTypes = {\r\n\r\n}\r\n\r\nexport default ThemesColor\r\n\r\n","G:\\react-admin\\src\\redux\\createReducer.js",[],"G:\\react-admin\\src\\redux\\actionType.js",[],{"ruleId":"192","severity":1,"message":"193","line":11,"column":8,"nodeType":"194","messageId":"195","endLine":11,"endColumn":18},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"192","severity":1,"message":"200","line":121,"column":51,"nodeType":"194","messageId":"195","endLine":121,"endColumn":58},{"ruleId":"192","severity":1,"message":"201","line":12,"column":17,"nodeType":"194","messageId":"195","endLine":12,"endColumn":26},{"ruleId":"192","severity":1,"message":"202","line":9,"column":24,"nodeType":"194","messageId":"195","endLine":9,"endColumn":28},{"ruleId":"192","severity":1,"message":"203","line":9,"column":40,"nodeType":"194","messageId":"195","endLine":9,"endColumn":46},{"ruleId":"192","severity":1,"message":"204","line":9,"column":48,"nodeType":"194","messageId":"195","endLine":9,"endColumn":52},{"ruleId":"192","severity":1,"message":"205","line":11,"column":27,"nodeType":"194","messageId":"195","endLine":11,"endColumn":33},{"ruleId":"192","severity":1,"message":"206","line":11,"column":35,"nodeType":"194","messageId":"195","endLine":11,"endColumn":40},{"ruleId":"192","severity":1,"message":"207","line":11,"column":42,"nodeType":"194","messageId":"195","endLine":11,"endColumn":46},{"ruleId":"208","severity":1,"message":"209","line":96,"column":66,"nodeType":"210","endLine":96,"endColumn":69},{"ruleId":"196","replacedBy":"211"},{"ruleId":"198","replacedBy":"212"},{"ruleId":"192","severity":1,"message":"213","line":9,"column":8,"nodeType":"194","messageId":"195","endLine":9,"endColumn":17},{"ruleId":"192","severity":1,"message":"214","line":48,"column":35,"nodeType":"194","messageId":"195","endLine":48,"endColumn":45},{"ruleId":"192","severity":1,"message":"215","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":13},{"ruleId":"192","severity":1,"message":"216","line":10,"column":9,"nodeType":"194","messageId":"195","endLine":10,"endColumn":16},{"ruleId":"192","severity":1,"message":"217","line":57,"column":17,"nodeType":"194","messageId":"195","endLine":57,"endColumn":26},{"ruleId":"192","severity":1,"message":"218","line":61,"column":15,"nodeType":"194","messageId":"195","endLine":61,"endColumn":18},{"ruleId":"192","severity":1,"message":"219","line":9,"column":28,"nodeType":"194","messageId":"195","endLine":9,"endColumn":36},{"ruleId":"192","severity":1,"message":"220","line":26,"column":13,"nodeType":"194","messageId":"195","endLine":26,"endColumn":14},{"ruleId":"192","severity":1,"message":"221","line":28,"column":13,"nodeType":"194","messageId":"195","endLine":28,"endColumn":14},{"ruleId":"192","severity":1,"message":"222","line":10,"column":38,"nodeType":"194","messageId":"195","endLine":10,"endColumn":50},{"ruleId":"192","severity":1,"message":"223","line":12,"column":7,"nodeType":"194","messageId":"195","endLine":12,"endColumn":15},{"ruleId":"192","severity":1,"message":"219","line":8,"column":17,"nodeType":"194","messageId":"195","endLine":8,"endColumn":25},{"ruleId":"192","severity":1,"message":"224","line":8,"column":27,"nodeType":"194","messageId":"195","endLine":8,"endColumn":38},{"ruleId":"192","severity":1,"message":"213","line":9,"column":8,"nodeType":"194","messageId":"195","endLine":9,"endColumn":17},{"ruleId":"225","severity":1,"message":"226","line":21,"column":43,"nodeType":"227","endLine":21,"endColumn":45,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":33,"column":1,"nodeType":"231","endLine":45,"endColumn":2},{"ruleId":"192","severity":1,"message":"213","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":17},"no-unused-vars","'BaseLayout' is defined but never used.","Identifier","unusedVar","no-native-reassign",["232"],"no-negated-in-lhs",["233"],"'visible' is assigned a value but never used.","'useEffect' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["232"],["233"],"'PropTypes' is defined but never used.","'pageParams' is assigned a value but never used.","'Icons' is defined but never used.","'TabPane' is assigned a value but never used.","'activeKey' is assigned a value but never used.","'arr' is assigned a value but never used.","'Fragment' is defined but never used.","'a' is assigned a value but never used.","'b' is assigned a value but never used.","'HomeOutlined' is defined but never used.","'IconFont' is assigned a value but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'visible'. Either include it or remove the dependency array. You can also do a functional update 'setVisible(v => ...)' if you only need 'visible' in the 'setVisible' call.","ArrayExpression",["234"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},"Update the dependencies array to be: [visible]",{"range":"237","text":"238"},[539,541],"[visible]"]